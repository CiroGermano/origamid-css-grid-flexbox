 body, ul, li, p {
   margin: 0px;
   padding: 0px;
   list-style: none;
   font-size: 1.2rem;
   font-family: Arial;
 }

 body {
   margin-bottom: 100px;
 }

 a {
   text-decoration: none;
   color: white;
 }

 h1 {
   text-align: center;
   margin-top: 100px;
 }

 img {
   max-width: 100%;
   display: block;
 }

 .header {
   background: #1D1E20;
   display: flex;
   flex-wrap: wrap;
   /* quando a tela for muito pequena um item vai ser deslocado para a parte de baixo */
   justify-content: space-between;
   align-items: center;
   padding: 20px;
 }

 .menu {
   display: flex;
 }

 .menu li {
   margin-left: 10px;
 }

 .menu li a {
   display: block;
   padding: 10px;
   /* aumentando a área de click */
 }

 /* CSS FLEXBOX */

 .flex {
   display: flex;
   flex-wrap: wrap;
   /* pode quebrar pra linha de baixo */
   max-width: 800px;
   margin: 0 auto;
 }

 .flex>div {
   flex: 1 1 200px;
   /* pode expandir / pode ficar menor (flex shrink) / sempre vai ter uma base de 200px ou então vai quebrar para a linha de baixo*/
   margin: 10px;
 }

 /* CSS GRID 1*/

 .grid1 {
   display: grid;
   grid-template-columns: repeat(3, 1fr);
   max-width: 800px;
   padding: 10px;
   margin: 0 auto;
   grid-gap: 20px;
 }

 .grid1>div:nth-child(n + 4) {
   display: grid;
   grid-template-columns: 1fr 1fr;
   grid-gap: 10px;
   align-items: center;
 }

.grid1>div.anuncio {
  grid-column: 1;
  grid-row: 2 / 5;
  border-top: 10px solid tomato;
  display: block;
}

@media (max-width: 600px) {
  .grid1 {
    grid-template-columns: repeat(2, 1fr);
  }

  .grid1>div:nth-child(n + 4) {
    display: block;  /* as propriedades do display grid não serão mais aplicadas, pois agora o elemento tem a propriedade display: block */
  }

  .grid1>div.anuncio {
    grid-column: auto;
    grid-row: auto;
    order: -1; /* Coloca como primeiro item da seciton class=.grid1. Cuidado, pois a order do DOM não é modificada. */
  }
}